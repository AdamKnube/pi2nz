#!/usr/bin/python3
#

import os
import subprocess

_debug_ = False
_decode_ = '/usr/bin/lame --decode '
_normal_ = '/usr/bin/normalize '
_encode_ = 'oggenc -q7 --output='
_working_ = '/Music'
_outputs_ = '/Music_ogg'

# Debug printer
def dprint(data = '', force = False):
	if ((_debug_ == False) and (force == False)): return
	if (data == ''):
		print('dprint() called with no data!')
		return
	print(data)
	
dprint('----------------------------------------------------------------------', True)
dprint('mp32ogg - converts a directory (recursively) of .mp3 files into', True)
dprint('          another directory full of normalized* .ogg files. - AK 2016', True)	
dprint('----------------------------------------------------------------------', True)

for root, folders, files in os.walk(_working_):
	for folder in folders:
		newfold = os.path.join(root, folder).replace(_working_, _outputs_)
		dprint('Creating directory: ' + newfold)
		try:
			if (not os.path.exists(newfold)):
				os.makedirs(newfold)
		except:
			raise
		
	for file in files:
		fullname = os.path.join(root, file)
		cleaname = fullname[:-4]
		wavename = cleaname + '.wav'
		oggname = cleaname + '.ogg'
		if (file.lower()[-4:] == '.mp3'):
			song = file[:-4]
			dprint('Found: ' + fullname, True)
			dprint('Decoding: ' + song)
			decode = _decode_ + '"' + fullname + '"'
			wtf1 = subprocess.run(decode, stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True, shell=True)
			dprint('Normalizing: ' + song)
			normal = _normal_ + '"' + wavename + '"'
			wtf2 = subprocess.run(normal, stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True, shell=True)			
			dprint('Encoding: ' + song)
			encode = _encode_ + '"' + oggname + '" "' + wavename + '"'
			wtf3 = subprocess.run(encode, stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True, shell=True)
			dprint('Cleaning up temporary wav file')
			os.remove(wavename)
			dprint('Re-locating ' + oggname + ' => ' + _outputs_)
			os.rename(oggname, oggname.replace(_working_, _outputs_))
			dprint('----------------------------------------------------------------------', True)
		else:
			dprint('Ignoring: ' + fullname)
exit(0)
